language: cpp
compiler: gcc
dist: trusty

cache: # see https://docs.travis-ci.com/user/caching/
- directories:
- $HOME/.cache

common_sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-trusty
  - llvm-toolchain-trusty-4.0
  - llvm-toolchain-trusty-5.0
  - llvm-toolchain-trusty-6.0

addons:
  apt:
    sources: *all_sources
    packages:
    - python3
    - python3-pip
    - g++-8
    - lcov

install: 
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.2-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.14.2-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.14.2-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}
  - pip install conan --user

matrix:
  include:
    - os: linux
      compiler: gcc
      addons: &gcc7
        apt:
          sources: *all_sources
          packages: ['g++-7']
      env: COMPILER='g++-7' COMPVER='7' COMPNAME='gcc'

    - os: linux
      compiler: gcc
      addons: &gcc8
        apt:
          sources: *all_sources
          packages: ['g++-8']
      env: COMPILER='g++-8' COMPVER='8' COMPNAME='gcc'


script: 
  - export CXX=${COMPILER}
  - conan remote add comunity https://api.bintray.com/conan/conan-community/conan 
  - conan remote list
  - git submodule update --init 
  - mkdir build
  - cd build
  - cmake --version
  - conan install .. --build boost -s compiler=${COMPNAME} -s compiler.version=${COMPVER}  ${CFLAGS}
  - cmake -Dsolidarity_ENABLE_COVERAGE=${COVERAGE} -Dsolidarity_ENABLE_TESTS=ON -Dsolidarity_ENABLE_EXAMPLES=ON -Dsolidarity_ENABLE_DOUBLECHECKS=ON ..
  - make -k -j 2
  #- CTEST_OUTPUT_ON_FAILURE=1 ctest -C Debug .  --verbose
  #- |
  #  if [[ "${TRAVIS_OS_NAME}" == "linux" ]] && [[ "${COVERAGE}" == "1" ]]; then
  #       cd ${TRAVIS_BUILD_DIR}
  #       lcov --directory . --capture --output-file coverage.info # capture coverage info
  #       echo "lcov --list coverage.info"    
  #       lcov --list coverage.info # debug before upload
  #       bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
  #  fi
